--
-- VHDL Architecture OBC.SPI_Control.struct
--
-- Created:
--          by - student.UNKNOWN (DESKTOP-3I0F3HP)
--          at - 14:38:01 02.08.2020
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2019.2 (Build 5)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;
USE ieee.numeric_std.all;
LIBRARY gates;
USE gates.gates.all;

LIBRARY OBC;
LIBRARY SPI;

ARCHITECTURE struct OF SPI_Control IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL SPI1_SS_n : std_ulogic;
   SIGNAL SPI3_SS_n : std_ulogic;
   SIGNAL SPI4_SS_n : std_ulogic;


   -- Component Declarations
   COMPONENT SPI_SlaveSelect
   PORT (
      SS_n        : IN     std_ulogic ;
      SlaveSelect : IN     std_ulogic_vector (1 DOWNTO 0);
      SS1_n       : OUT    std_ulogic ;
      SS2_n       : OUT    std_ulogic ;
      SS3_n       : OUT    std_ulogic 
   );
   END COMPONENT;
   COMPONENT spiFifo
   GENERIC (
      dataBitNb      : positive   := 8;
      fifoDepth      : positive   := 8;      --Max nbr of sequential transfers
      spiClockPeriod : positive   := 1;      --SPI clock divider
      spiFramePeriod : positive   := 1;      --SPI Inter Frame Gap
      cPol           : std_ulogic := '0';
      cPha           : std_ulogic := '0'
   );
   PORT (
      slaveRd     : IN     std_ulogic ;
      slaveData   : OUT    std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      clock       : IN     std_ulogic ;
      MISO        : IN     std_ulogic ;
      reset       : IN     std_ulogic ;
      MOSI        : OUT    std_ulogic ;
      slaveEmpty  : OUT    std_ulogic ;
      masterFull  : OUT    std_ulogic ;
      masterData  : IN     std_ulogic_vector (dataBitNb-1 DOWNTO 0);
      masterWr    : IN     std_ulogic ;
      sClk        : OUT    std_ulogic ;
      endTransfer : OUT    std_logic ;
      SS_n        : OUT    std_ulogic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : SPI_SlaveSelect USE ENTITY OBC.SPI_SlaveSelect;
   FOR ALL : spiFifo USE ENTITY SPI.spiFifo;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_0 : SPI_SlaveSelect
      PORT MAP (
         SS_n        => SPI1_SS_n,
         SlaveSelect => SPI1_Select,
         SS1_n       => SPI1_SS1_n,
         SS2_n       => SPI1_SS2_n,
         SS3_n       => SPI1_SS3_n
      );
   U_1 : SPI_SlaveSelect
      PORT MAP (
         SS_n        => SPI3_SS_n,
         SlaveSelect => SPI3_Select,
         SS1_n       => SPI3_SS1_n,
         SS2_n       => SPI3_SS2_n,
         SS3_n       => OPEN
      );
   U_2 : SPI_SlaveSelect
      PORT MAP (
         SS_n        => SPI4_SS_n,
         SlaveSelect => SPI4_Select,
         SS1_n       => SPI4_SS1_n,
         SS2_n       => SPI4_SS2_n,
         SS3_n       => OPEN
      );
   U_3 : spiFifo
      GENERIC MAP (
         dataBitNb      => 8,
         fifoDepth      => 8,         --Max nbr of sequential transfers
         spiClockPeriod => 1,         --SPI clock divider
         spiFramePeriod => 1,         --SPI Inter Frame Gap
         cPol           => '0',
         cPha           => '0'
      )
      PORT MAP (
         slaveRd     => SPI1_Read,
         slaveData   => SPI1_DataIn,
         clock       => clock,
         MISO        => SPI1_MISO,
         reset       => reset,
         MOSI        => SPI1_MOSI,
         slaveEmpty  => SPI1_slaveEmpty,
         masterFull  => SPI1_masterFull,
         masterData  => SPI1_DataOut,
         masterWr    => SPI1_Write,
         sClk        => SPI1_sClk,
         endTransfer => SPI1_endTransfer,
         SS_n        => SPI1_SS_n
      );
   U_4 : spiFifo
      GENERIC MAP (
         dataBitNb      => 8,
         fifoDepth      => 8,         --Max nbr of sequential transfers
         spiClockPeriod => 1,         --SPI clock divider
         spiFramePeriod => 1,         --SPI Inter Frame Gap
         cPol           => '0',
         cPha           => '0'
      )
      PORT MAP (
         slaveRd     => SPI2_Read,
         slaveData   => SPI2_DataIn,
         clock       => clock,
         MISO        => SPI2_MISO,
         reset       => reset,
         MOSI        => SPI2_MOSI,
         slaveEmpty  => SPI2_slaveEmpty,
         masterFull  => SPI2_masterFull,
         masterData  => SPI2_DataOut,
         masterWr    => SPI2_Write,
         sClk        => SPI2_sClk,
         endTransfer => SPI2_endTransfer,
         SS_n        => SPI2_SS1_n
      );
   U_5 : spiFifo
      GENERIC MAP (
         dataBitNb      => 8,
         fifoDepth      => 8,         --Max nbr of sequential transfers
         spiClockPeriod => 1,         --SPI clock divider
         spiFramePeriod => 1,         --SPI Inter Frame Gap
         cPol           => '0',
         cPha           => '0'
      )
      PORT MAP (
         slaveRd     => SPI3_Read,
         slaveData   => SPI3_DataIn,
         clock       => clock,
         MISO        => SPI3_MISO,
         reset       => reset,
         MOSI        => SPI3_MOSI,
         slaveEmpty  => SPI3_slaveEmpty,
         masterFull  => SPI3_masterFull,
         masterData  => SPI3_DataOut,
         masterWr    => SPI3_Write,
         sClk        => SPI3_sClk,
         endTransfer => SPI3_endTransfer,
         SS_n        => SPI3_SS_n
      );
   U_6 : spiFifo
      GENERIC MAP (
         dataBitNb      => 8,
         fifoDepth      => 8,         --Max nbr of sequential transfers
         spiClockPeriod => 1,         --SPI clock divider
         spiFramePeriod => 1,         --SPI Inter Frame Gap
         cPol           => '0',
         cPha           => '0'
      )
      PORT MAP (
         slaveRd     => SPI4_Read,
         slaveData   => SPI4_DataIn,
         clock       => clock,
         MISO        => SPI4_MISO,
         reset       => reset,
         MOSI        => SPI4_MOSI,
         slaveEmpty  => SPI4_slaveEmpty,
         masterFull  => SPI4_masterFull,
         masterData  => SPI4_DataOut,
         masterWr    => SPI4_Write,
         sClk        => SPI4_sClk,
         endTransfer => SPI4_endTransfer,
         SS_n        => SPI4_SS_n
      );

END struct;
